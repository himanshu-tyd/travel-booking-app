{"ast":null,"code":"var _jsxFileName = \"C:\\\\HIMANSHU\\\\Programing\\\\Travel Booking\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport \"./App.css\";\nimport Layout from \"./components/layout/layout\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const location = useLocation();\n  const id = useParams();\n  useEffect(() => {\n    // Function to update the document title based on the current URL\n    const updateTitle = () => {\n      const pathname = location.pathname;\n      let pageTitle = \"Default Title\"; // Default title\n\n      // Switch statement to set different titles for different URLs\n      switch (pathname) {\n        case \"/home\":\n          pageTitle = \"Home Page\";\n          break;\n        case \"/about\":\n          pageTitle = \"About Us\";\n          break;\n        case \"/tours\":\n          pageTitle = \"Tours\";\n          break;\n        case \"/register\":\n          pageTitle = \"Register\";\n          break;\n        case \"/tours\":\n          pageTitle = \"Tours\";\n          break;\n        case `/tours/:id`:\n          pageTitle = `Tours${id}`;\n          break;\n        // Add more cases for other URLs as needed\n        default:\n          pageTitle = \"Default Title\";\n      }\n\n      // Update the document title\n      document.title = pageTitle;\n    };\n\n    // Call the function to update the title when the component mounts\n    updateTitle();\n\n    // Clean up function to remove the event listener when the component unmounts\n    return () => {\n      // No cleanup needed in this case\n    };\n  }, [location.pathname]); // Dependency array ensures that the effect runs when the pathname changes\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"zARBYggs5ThWFFnxwPGmM2ctxIo=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useLocation","useParams","Layout","App","location","id","updateTitle","pathname","pageTitle","document","title"],"sources":["C:/HIMANSHU/Programing/Travel Booking/frontend/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport {useLocation,useParams} from \"react-router-dom\"\nimport \"./App.css\";\nimport Layout from \"./components/layout/layout\";\n\n\n\nconst App = () => {\n  \n  const location = useLocation();\n\n  const id=useParams()\n\n\n  useEffect(() => {\n    // Function to update the document title based on the current URL\n    const updateTitle = () => {\n      const pathname = location.pathname;\n      let pageTitle = \"Default Title\"; // Default title\n\n      // Switch statement to set different titles for different URLs\n      switch (pathname) {\n        case \"/home\":\n          pageTitle = \"Home Page\";\n          break;\n        case \"/about\":\n          pageTitle = \"About Us\";\n          break;\n        case \"/tours\":\n          pageTitle = \"Tours\";\n          break;\n        case \"/register\":\n          pageTitle = \"Register\";\n          break;\n        case \"/tours\":\n          pageTitle = \"Tours\";\n          break;\n        case `/tours/:id`:\n          pageTitle = `Tours${id}`;\n          break;\n        // Add more cases for other URLs as needed\n        default:\n          pageTitle = \"Default Title\";\n      }\n\n      // Update the document title\n      document.title = pageTitle;\n    };\n\n    // Call the function to update the title when the component mounts\n    updateTitle();\n\n    // Clean up function to remove the event listener when the component unmounts\n    return () => {\n      // No cleanup needed in this case\n    };\n  }, [location.pathname]); // Dependency array ensures that the effect runs when the pathname changes\n\n\n  return (\n    <>\n      <Layout/>\n    </>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAAQC,WAAW,EAACC,SAAS,QAAO,kBAAkB;AACtD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,4BAA4B;AAAC;AAAA;AAIhD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEhB,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAE9B,MAAMK,EAAE,GAACJ,SAAS,EAAE;EAGpBF,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,WAAW,GAAG,MAAM;MACxB,MAAMC,QAAQ,GAAGH,QAAQ,CAACG,QAAQ;MAClC,IAAIC,SAAS,GAAG,eAAe,CAAC,CAAC;;MAEjC;MACA,QAAQD,QAAQ;QACd,KAAK,OAAO;UACVC,SAAS,GAAG,WAAW;UACvB;QACF,KAAK,QAAQ;UACXA,SAAS,GAAG,UAAU;UACtB;QACF,KAAK,QAAQ;UACXA,SAAS,GAAG,OAAO;UACnB;QACF,KAAK,WAAW;UACdA,SAAS,GAAG,UAAU;UACtB;QACF,KAAK,QAAQ;UACXA,SAAS,GAAG,OAAO;UACnB;QACF,KAAM,YAAW;UACfA,SAAS,GAAI,QAAOH,EAAG,EAAC;UACxB;QACF;QACA;UACEG,SAAS,GAAG,eAAe;MAAC;;MAGhC;MACAC,QAAQ,CAACC,KAAK,GAAGF,SAAS;IAC5B,CAAC;;IAED;IACAF,WAAW,EAAE;;IAEb;IACA,OAAO,MAAM;MACX;IAAA,CACD;EACH,CAAC,EAAE,CAACF,QAAQ,CAACG,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAGzB,oBACE;IAAA,uBACE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA;EAAE,iBACR;AAEP,CAAC;AAAA,GAzDKJ,GAAG;EAAA,QAEUH,WAAW,EAEnBC,SAAS;AAAA;AAAA,KAJdE,GAAG;AA2DT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}